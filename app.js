// Decode base64 data into binary
import pako from 'pako';



function decompressTheData(basestring){
let base64Data = basestring

let binaryData = atob(base64Data);
// Convert binary data to ArrayBuffer
let arrayBuffer = new ArrayBuffer(binaryData.length);
let uint8Array = new Uint8Array(arrayBuffer);
for (let i = 0; i < binaryData.length; i++) {
    uint8Array[i] = binaryData.charCodeAt(i);
}

// Decompress the ArrayBuffer using the appropriate algorithm
let decompressedData;
try {
    // Try gzip decompression
    decompressedData = pako.inflate(uint8Array, { to: 'string' });
} catch (error) {
    try {
        // If gzip fails, try deflate decompression
        decompressedData = pako.inflateRaw(uint8Array, { to: 'string' });

    } catch (error) {
        try {
            // If deflate fails, try brotli decompression
            decompressedData = pako.inflate(uint8Array, { to: 'string' });
        } catch (error) {
            console.error("Error decompressing data:", error);
        }
    }
}
return decompressedData;
}

const a = decompressTheData('')
console.log(a)
// Now you can use the decompressedData as needed
export default decompressTheData;



